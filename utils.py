"""
–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –±–æ—Ç–∞
"""
import asyncio
from aiogram.types import Message


async def show_progress_bar(message: Message, duration: int = 15):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        duration: –û–∂–∏–¥–∞–µ–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    """
    progress_symbols = ["‚ñ±", "‚ñ∞"]
    steps = 20  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    
    for i in range(steps + 1):
        progress = int((i / steps) * 100)
        filled = int((i / steps) * 10)
        bar = "‚ñ∞" * filled + "‚ñ±" * (10 - filled)
        
        # –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        if progress < 30:
            status_text = "üé® –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è..."
        elif progress < 60:
            status_text = "üñºÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è..."
        elif progress < 90:
            status_text = "‚ú® –§–∏–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞..."
        else:
            status_text = "üéâ –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ..."
        
        try:
            await message.edit_text(
                f"{status_text}\n\n"
                f"[{bar}] {progress}%\n\n"
                f"‚è±Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ..."
            )
        except Exception:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å)
            pass
        
        # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
        await asyncio.sleep(duration / steps)


async def show_simple_progress(message: Message, total_steps: int = 10):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å —Å —Ç–æ—á–∫–∞–º–∏
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        total_steps: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤
    """
    dots = ["‚ö™", "‚ö´"]
    
    for step in range(total_steps):
        filled_dots = "‚ö´" * (step + 1)
        empty_dots = "‚ö™" * (total_steps - step - 1)
        
        try:
            await message.edit_text(
                f"üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...\n\n"
                f"{filled_dots}{empty_dots}\n\n"
                f"‚è±Ô∏è –û–∂–∏–¥–∞–π—Ç–µ, —ç—Ç–æ –∑–∞–π–º–µ—Ç 10-20 —Å–µ–∫—É–Ω–¥"
            )
        except Exception:
            pass
        
        await asyncio.sleep(1.5)

